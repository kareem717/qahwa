// This allows TypeScript to pick up the magic constants that's auto-generated by Forge's Vite
// plugin that tells the Electron app where to look for the Vite-bundled app code (depending on
// whether you're running in development or production).
declare const MAIN_WINDOW_VITE_DEV_SERVER_URL: string;
declare const MAIN_WINDOW_VITE_NAME: string;

// Import types from the osx-audio package
import type { PermissionResult, DeviceType } from "@note/osx-audio";

// Preload types
interface ThemeModeContext {
  toggle: () => Promise<boolean>;
  dark: () => Promise<void>;
  light: () => Promise<void>;
  system: () => Promise<boolean>;
  current: () => Promise<"dark" | "light" | "system">;
}
interface ElectronWindow {
  minimize: () => Promise<void>;
  maximize: () => Promise<void>;
  close: () => Promise<void>;
}

interface ElectronAuth {
  openSignInWindow: () => void;
  getToken: () => Promise<string>;
  setToken: (token: string) => Promise<void>;
  removeToken: () => Promise<void>;
  handleAuthCallback: (callback: (url: string) => void) => () => void;
}

interface ElectronSystemAudio {
  getPermissions: () => Promise<PermissionResult>;
  startCapture: (callback: (data: ArrayBuffer) => void) => (() => void);
  stopCapture: () => void;
  requestPermissions: (deviceType: DeviceType) => Promise<PermissionResult>;
}

declare global {
  interface Window {
    themeMode: ThemeModeContext;
    electronWindow: ElectronWindow;
    electronAuth: ElectronAuth;
    electronSystemAudio: ElectronSystemAudio;
  }
}